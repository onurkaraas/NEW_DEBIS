{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\onurk\\\\Desktop\\\\NEW_DEBIS\\\\screens\\\\TranscriptScreen.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pdf from \"react-native-pdf\";\nimport { COLORS } from \"../constants/theme\";\n\nvar PDFExample = function (_React$Component) {\n  _inherits(PDFExample, _React$Component);\n\n  var _super = _createSuper(PDFExample);\n\n  function PDFExample() {\n    _classCallCheck(this, PDFExample);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PDFExample, [{\n    key: \"render\",\n    value: function render() {\n      var source = {\n        uri: \"https://debis.deu.edu.tr/OgrenciIsleri/Rapor/ogrenci_bazli_listeler/en_yeni_transcript/transcript.php\",\n        cache: true\n      };\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, React.createElement(Pdf, {\n        source: source,\n        onLoadComplete: function onLoadComplete(numberOfPages, filePath) {\n          console.log(\"number of pages: \" + numberOfPages);\n        },\n        onPageChanged: function onPageChanged(page, numberOfPages) {\n          console.log(\"current page: \" + page);\n        },\n        onError: function onError(error) {\n          console.log(error);\n        },\n        onPressLink: function onPressLink(uri) {\n          console.log(\"Link presse: \" + uri);\n        },\n        style: styles.pdf,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return PDFExample;\n}(React.Component);\n\nvar TranscriptScreen = function TranscriptScreen() {\n  return React.createElement(PDFExample, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: COLORS.secondary,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  pdf: {\n    flex: 1,\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height\n  }\n});\nexport default TranscriptScreen;","map":{"version":3,"sources":["C:/Users/onurk/Desktop/NEW_DEBIS/screens/TranscriptScreen.js"],"names":["React","Pdf","COLORS","PDFExample","source","uri","cache","styles","container","numberOfPages","filePath","console","log","page","error","pdf","Component","TranscriptScreen","StyleSheet","create","backgroundColor","secondary","flex","alignItems","justifyContent","width","Dimensions","get","height"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAMA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,MAAT;;IAEMC,U;;;;;;;;;;;;;WACJ,kBAAS;AACP,UAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAE,uGADQ;AAEbC,QAAAA,KAAK,EAAE;AAFM,OAAf;AAKA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AACE,QAAA,MAAM,EAAEJ,MADV;AAEE,QAAA,cAAc,EAAE,wBAACK,aAAD,EAAgBC,QAAhB,EAA6B;AAC3CC,UAAAA,OAAO,CAACC,GAAR,uBAAgCH,aAAhC;AACD,SAJH;AAKE,QAAA,aAAa,EAAE,uBAACI,IAAD,EAAOJ,aAAP,EAAyB;AACtCE,UAAAA,OAAO,CAACC,GAAR,oBAA6BC,IAA7B;AACD,SAPH;AAQE,QAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAClBH,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,SAVH;AAWE,QAAA,WAAW,EAAE,qBAACT,GAAD,EAAS;AACpBM,UAAAA,OAAO,CAACC,GAAR,mBAA4BP,GAA5B;AACD,SAbH;AAcE,QAAA,KAAK,EAAEE,MAAM,CAACQ,GAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAoBD;;;;EA3BsBf,KAAK,CAACgB,S;;AA8B/B,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,SAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;AAGA,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,eAAe,EAAElB,MAAM,CAACmB,SADf;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BT,EAAAA,GAAG,EAAE;AACHO,IAAAA,IAAI,EAAE,CADH;AAEHG,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAF7B;AAGHG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAH9B;AAP0B,CAAlB,CAAf;AAcA,eAAeX,gBAAf","sourcesContent":["import React from \"react\";\n\nimport { StyleSheet, View, Text } from \"react-native\";\n\nimport { Dimensions } from \"react-native\";\n\nimport Pdf from \"react-native-pdf\";\nimport { COLORS } from \"../constants/theme\";\n\nclass PDFExample extends React.Component {\n  render() {\n    const source = {\n      uri: \"https://debis.deu.edu.tr/OgrenciIsleri/Rapor/ogrenci_bazli_listeler/en_yeni_transcript/transcript.php\",\n      cache: true,\n    };\n\n    return (\n      <View style={styles.container}>\n        <Pdf\n          source={source}\n          onLoadComplete={(numberOfPages, filePath) => {\n            console.log(`number of pages: ${numberOfPages}`);\n          }}\n          onPageChanged={(page, numberOfPages) => {\n            console.log(`current page: ${page}`);\n          }}\n          onError={(error) => {\n            console.log(error);\n          }}\n          onPressLink={(uri) => {\n            console.log(`Link presse: ${uri}`);\n          }}\n          style={styles.pdf}\n        />\n      </View>\n    );\n  }\n}\n\nconst TranscriptScreen = () => {\n  return <PDFExample />;\n};\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: COLORS.secondary,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  pdf: {\n    flex: 1,\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n  },\n});\n\nexport default TranscriptScreen;\n"]},"metadata":{},"sourceType":"module"}