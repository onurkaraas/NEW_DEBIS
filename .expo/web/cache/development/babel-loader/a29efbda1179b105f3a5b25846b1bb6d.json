{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar PdfManagerNative = require('react-native').NativeModules.PdfManager;\n\nvar PdfManager = function () {\n  function PdfManager() {\n    _classCallCheck(this, PdfManager);\n  }\n\n  _createClass(PdfManager, null, [{\n    key: \"loadFile\",\n    value: function loadFile(path, password) {\n      invariant(typeof path === 'string', 'path must be a valid string.');\n\n      if (password === undefined) {\n        password = \"\";\n      }\n\n      return PdfManagerNative.loadFile(path, password);\n    }\n  }]);\n\n  return PdfManager;\n}();\n\nexport { PdfManager as default };","map":{"version":3,"sources":["C:/Users/onurk/Desktop/NEW_DEBIS/node_modules/react-native-pdf/PdfManager.js"],"names":["invariant","require","PdfManagerNative","NativeModules","PdfManager","path","password","undefined","loadFile"],"mappings":"AAQA;;;;;AACA,IAAMA,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,cAAD,CAAP,CAAwBE,aAAxB,CAAsCC,UAA/D;;IAGqBA,U;;;;;;;WAEjB,kBAAgBC,IAAhB,EACgBC,QADhB,EACqD;AAEjDN,MAAAA,SAAS,CACL,OAAOK,IAAP,KAAgB,QADX,EAEL,8BAFK,CAAT;;AAKA,UAAIC,QAAQ,KAAKC,SAAjB,EAA4B;AACxBD,QAAAA,QAAQ,GAAG,EAAX;AACH;;AAED,aAAOJ,gBAAgB,CAACM,QAAjB,CAA0BH,IAA1B,EAAgCC,QAAhC,CAAP;AAEH;;;;;;SAhBgBF,U","sourcesContent":["/**\n * Copyright (c) 2017-present, Wonday (@wonday.org)\n * All rights reserved.\n *\n * This source code is licensed under the MIT-style license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\nconst invariant = require('fbjs/lib/invariant');\nconst PdfManagerNative = require('react-native').NativeModules.PdfManager;\n\n\nexport default class PdfManager {\n\n    static loadFile(path: string,\n                    password?: string,): Promise<string> {\n\n        invariant(\n            typeof path === 'string',\n            'path must be a valid string.',\n        );\n\n        if (password === undefined) {\n            password = \"\";\n        }\n\n        return PdfManagerNative.loadFile(path, password);\n\n    }\n}"]},"metadata":{},"sourceType":"module"}