{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\onurk\\\\Desktop\\\\NEW_DEBIS\\\\node_modules\\\\react-native-pdf\\\\PdfView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport PropTypes from 'prop-types';\nimport PdfManager from \"./PdfManager\";\nimport PdfPageView from \"./PdfPageView\";\nimport DoubleTapView from \"./DoubleTapView\";\nimport PinchZoomView from \"./PinchZoomView\";\nimport PdfViewFlatList from \"./PdfViewFlatList\";\nvar MIN_SCALE = 1;\nvar MAX_SCALE = 3;\nvar VIEWABILITYCONFIG = {\n  minimumViewTime: 500,\n  itemVisiblePercentThreshold: 10,\n  waitForInteraction: false\n};\n\nvar PdfView = function (_Component) {\n  _inherits(PdfView, _Component);\n\n  var _super = _createSuper(PdfView);\n\n  function PdfView(_props) {\n    var _this;\n\n    _classCallCheck(this, PdfView);\n\n    _this = _super.call(this, _props);\n\n    _this._keyExtractor = function (item, index) {\n      return \"pdf-page-\" + index;\n    };\n\n    _this._getPageWidth = function () {\n      var fitPolicy = _this.props.fitPolicy;\n\n      if (_this.state.numberOfPages === 1 || _this.props.singlePage) {\n        fitPolicy = 2;\n      }\n\n      switch (fitPolicy) {\n        case 0:\n          return _this.state.contentContainerSize.width * _this.state.scale;\n\n        case 1:\n          return _this.state.contentContainerSize.height * _this.state.pageAspectRate * _this.state.scale;\n\n        case 2:\n        default:\n          {\n            if (_this.state.contentContainerSize.width / _this.state.contentContainerSize.height < _this.state.pageAspectRate) {\n              return _this.state.contentContainerSize.width * _this.state.scale;\n            } else {\n              return _this.state.contentContainerSize.height * _this.state.pageAspectRate * _this.state.scale;\n            }\n          }\n      }\n    };\n\n    _this._getPageHeight = function () {\n      var fitPolicy = _this.props.fitPolicy;\n\n      if (_this.state.numberOfPages === 1 || _this.props.singlePage) {\n        fitPolicy = 2;\n      }\n\n      switch (fitPolicy) {\n        case 0:\n          return _this.state.contentContainerSize.width * (1 / _this.state.pageAspectRate) * _this.state.scale;\n\n        case 1:\n          return _this.state.contentContainerSize.height * _this.state.scale;\n\n        case 2:\n        default:\n          {\n            if (_this.state.contentContainerSize.width / _this.state.contentContainerSize.height < _this.state.pageAspectRate) {\n              return _this.state.contentContainerSize.width * (1 / _this.state.pageAspectRate) * _this.state.scale;\n            } else {\n              return _this.state.contentContainerSize.height * _this.state.scale;\n            }\n          }\n      }\n    };\n\n    _this._renderSeparator = function () {\n      return React.createElement(View, {\n        style: _this.props.horizontal ? {\n          width: _this.props.spacing * _this.state.scale,\n          backgroundColor: 'transparent'\n        } : {\n          height: _this.props.spacing * _this.state.scale,\n          backgroundColor: 'transparent'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }\n      });\n    };\n\n    _this._onItemSingleTap = function (index, x, y) {\n      _this.props.onPageSingleTap(index + 1, x, y);\n    };\n\n    _this._onItemDoubleTap = function (index) {\n      if (_this.state.scale >= _this.props.maxScale) {\n        _this._onScaleChanged({\n          scale: 1 / _this.state.scale,\n          pageX: _this.state.contentContainerSize.width / 2,\n          pageY: _this.state.contentContainerSize.height / 2\n        });\n      } else {\n        _this._onScaleChanged({\n          scale: 1.2,\n          pageX: _this.state.contentContainerSize.width / 2,\n          pageY: _this.state.contentContainerSize.height / 2\n        });\n      }\n    };\n\n    _this._onScaleChanged = function (pinchInfo) {\n      var newScale = pinchInfo.scale * _this.state.scale;\n      newScale = newScale > _this.props.maxScale ? _this.props.maxScale : newScale;\n      newScale = newScale < _this.props.minScale ? _this.props.minScale : newScale;\n      var newContentOffset = {\n        x: (_this.state.contentOffset.x + pinchInfo.pageX) * (newScale / _this.state.scale) - pinchInfo.pageX,\n        y: (_this.state.contentOffset.y + pinchInfo.pageY) * (newScale / _this.state.scale) - pinchInfo.pageY\n      };\n\n      _this.setState({\n        scale: newScale,\n        newContentOffset: newContentOffset\n      });\n\n      _this.props.onScaleChanged(newScale);\n    };\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var pageView = React.createElement(PdfPageView, {\n        accessible: true,\n        key: item.id,\n        fileNo: _this.state.fileNo,\n        page: item.key + 1,\n        width: _this._getPageWidth(),\n        height: _this._getPageHeight(),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      });\n\n      if (_this.props.singlePage) {\n        return React.createElement(View, {\n          style: {\n            flexDirection: _this.props.horizontal ? 'row' : 'column'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }\n        }, pageView);\n      }\n\n      return React.createElement(DoubleTapView, {\n        style: {\n          flexDirection: _this.props.horizontal ? 'row' : 'column'\n        },\n        onSingleTap: function onSingleTap(x, y) {\n          _this._onItemSingleTap(index, x, y);\n        },\n        onDoubleTap: function onDoubleTap() {\n          _this._onItemDoubleTap(index);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }, pageView, index !== _this.state.numberOfPages - 1 && _this._renderSeparator());\n    };\n\n    _this._onViewableItemsChanged = function (viewableInfo) {\n      for (var i = 0; i < viewableInfo.viewableItems.length; i++) {\n        _this._onPageChanged(viewableInfo.viewableItems[i].index + 1, _this.state.numberOfPages);\n\n        if (viewableInfo.viewableItems.length + viewableInfo.viewableItems[0].index < _this.state.numberOfPages) break;\n      }\n    };\n\n    _this._onPageChanged = function (page, numberOfPages) {\n      if (_this.props.onPageChanged && _this.state.currentPage !== page) {\n        _this.props.onPageChanged(page, numberOfPages);\n\n        _this.setState({\n          currentPage: page\n        });\n      }\n    };\n\n    _this._getRef = function (ref) {\n      return _this._flatList = ref;\n    };\n\n    _this._getItemLayout = function (data, index) {\n      return {\n        length: _this.props.horizontal ? _this._getPageWidth() : _this._getPageHeight(),\n        offset: ((_this.props.horizontal ? _this._getPageWidth() : _this._getPageHeight()) + _this.props.spacing * _this.state.scale) * index,\n        index: index\n      };\n    };\n\n    _this._onScroll = function (e) {\n      _this.setState({\n        contentOffset: e.nativeEvent.contentOffset,\n        newContentOffset: e.nativeEvent.contentOffset\n      });\n    };\n\n    _this._onListContentSizeChange = function (contentWidth, contentHeight) {\n      if (_this.state.contentOffset.x != _this.state.newContentOffset.x || _this.state.contentOffset.y != _this.state.newContentOffset.y) {\n        _this._flatList.scrollToXY(_this.state.newContentOffset.x, _this.state.newContentOffset.y);\n      }\n    };\n\n    _this._renderList = function () {\n      var data = [];\n\n      if (_this.props.singlePage) {\n        data[0] = {\n          key: _this.props.currentPage >= 0 ? _this.props.currentPage : 0\n        };\n      } else {\n        for (var i = 0; i < _this.state.numberOfPages; i++) {\n          data[i] = {\n            key: i\n          };\n        }\n      }\n\n      return React.createElement(PdfViewFlatList, {\n        ref: _this._getRef,\n        style: [styles.container, _this.props.style],\n        pagingEnabled: _this.props.enablePaging,\n        contentContainerStyle: [{\n          justifyContent: 'center',\n          alignItems: 'center'\n        }, _this.props.horizontal ? {\n          height: _this.state.contentContainerSize.height * _this.state.scale\n        } : {\n          width: _this.state.contentContainerSize.width * _this.state.scale\n        }],\n        horizontal: _this.props.horizontal,\n        data: data,\n        renderItem: _this._renderItem,\n        keyExtractor: _this._keyExtractor,\n        windowSize: 11,\n        getItemLayout: _this._getItemLayout,\n        maxToRenderPerBatch: 1,\n        renderScrollComponent: function renderScrollComponent(props) {\n          return React.createElement(ScrollView, _extends({}, props, {\n            centerContent: _this.state.centerContent,\n            pinchGestureEnabled: false,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 51\n            }\n          }));\n        },\n        initialScrollIndex: _this.props.page < 1 ? 0 : _this.props.page - 1,\n        onViewableItemsChanged: _this._onViewableItemsChanged,\n        viewabilityConfig: VIEWABILITYCONFIG,\n        onScroll: _this._onScroll,\n        onContentSizeChange: _this._onListContentSizeChange,\n        scrollEnabled: !_this.props.singlePage,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }\n      });\n    };\n\n    _this._onLayout = function (event) {\n      _this.setState({\n        contentContainerSize: {\n          width: event.nativeEvent.layout.width,\n          height: event.nativeEvent.layout.height\n        }\n      });\n    };\n\n    _this.state = {\n      pdfLoaded: false,\n      fileNo: -1,\n      numberOfPages: 0,\n      page: -1,\n      currentPage: -1,\n      pageAspectRate: 0.5,\n      pdfPageSize: {\n        width: 0,\n        height: 0\n      },\n      contentContainerSize: {\n        width: 0,\n        height: 0\n      },\n      scale: _this.props.scale,\n      contentOffset: {\n        x: 0,\n        y: 0\n      },\n      newContentOffset: {\n        x: 0,\n        y: 0\n      }\n    };\n    _this._flatList = null;\n    _this._scaleTimer = null;\n    _this._scrollTimer = null;\n    _this._mounted = false;\n    return _this;\n  }\n\n  _createClass(PdfView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._mounted = true;\n      PdfManager.loadFile(this.props.path, this.props.password).then(function (pdfInfo) {\n        if (_this2._mounted) {\n          var fileNo = pdfInfo[0];\n          var numberOfPages = pdfInfo[1];\n          var width = pdfInfo[2];\n          var height = pdfInfo[3];\n          var pageAspectRatio = height === 0 ? 1 : width / height;\n\n          _this2.setState({\n            pdfLoaded: true,\n            fileNo: fileNo,\n            numberOfPages: numberOfPages,\n            pageAspectRate: pageAspectRatio,\n            pdfPageSize: {\n              width: width,\n              height: height\n            },\n            centerContent: numberOfPages > 1 ? false : true\n          });\n\n          if (_this2.props.onLoadComplete) {\n            _this2.props.onLoadComplete(numberOfPages, _this2.props.path, {\n              width: width,\n              height: height\n            });\n          }\n        }\n      }).catch(function (error) {\n        _this2.props.onError(error);\n      });\n      clearTimeout(this._scrollTimer);\n      this._scrollTimer = setTimeout(function () {\n        if (_this2._flatList) {\n          _this2._flatList.scrollToIndex({\n            animated: false,\n            index: _this2.props.page < 1 ? 0 : _this2.props.page - 1\n          });\n        }\n      }, 200);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      if (this.props.scale !== this.state.scale) {\n        this._onScaleChanged({\n          scale: this.props.scale / this.state.scale,\n          pageX: this.state.contentContainerSize.width / 2,\n          pageY: this.state.contentContainerSize.height / 2\n        });\n      }\n\n      if (this.props.horizontal !== prevProps.horizontal || this.props.page !== prevProps.page) {\n        var page = this.props.page < 1 ? 1 : this.props.page;\n        page = page > this.state.numberOfPages ? this.state.numberOfPages : page;\n\n        if (this._flatList) {\n          clearTimeout(this._scrollTimer);\n          this._scrollTimer = setTimeout(function () {\n            _this3._flatList.scrollToIndex({\n              animated: false,\n              index: page - 1\n            });\n          }, 200);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n      clearTimeout(this._scaleTimer);\n      clearTimeout(this._scrollTimer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.singlePage) {\n        return React.createElement(View, {\n          style: styles.container,\n          onLayout: this._onLayout,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }\n        }, this.state.pdfLoaded && this._renderList());\n      }\n\n      return React.createElement(PinchZoomView, {\n        style: styles.container,\n        onLayout: this._onLayout,\n        onScaleChanged: this._onScaleChanged,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }\n      }, this.state.pdfLoaded && this._renderList());\n    }\n  }]);\n\n  return PdfView;\n}(Component);\n\nPdfView.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  path: PropTypes.string,\n  password: PropTypes.string,\n  scale: PropTypes.number,\n  minScale: PropTypes.number,\n  maxScale: PropTypes.number,\n  spacing: PropTypes.number,\n  fitPolicy: PropTypes.number,\n  horizontal: PropTypes.bool,\n  page: PropTypes.number,\n  currentPage: PropTypes.number,\n  singlePage: PropTypes.bool,\n  onPageSingleTap: PropTypes.func,\n  onScaleChanged: PropTypes.func\n});\nPdfView.defaultProps = {\n  path: \"\",\n  password: \"\",\n  scale: 1,\n  minScale: MIN_SCALE,\n  maxScale: MAX_SCALE,\n  spacing: 10,\n  style: {},\n  fitPolicy: 2,\n  horizontal: false,\n  centerContent: false,\n  page: 1,\n  currentPage: -1,\n  enablePaging: false,\n  singlePage: false,\n  onPageSingleTap: function onPageSingleTap(page, x, y) {},\n  onScaleChanged: function onScaleChanged(scale) {}\n};\nexport { PdfView as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/onurk/Desktop/NEW_DEBIS/node_modules/react-native-pdf/PdfView.js"],"names":["React","Component","ViewPropTypes","PropTypes","PdfManager","PdfPageView","DoubleTapView","PinchZoomView","PdfViewFlatList","MIN_SCALE","MAX_SCALE","VIEWABILITYCONFIG","minimumViewTime","itemVisiblePercentThreshold","waitForInteraction","PdfView","props","_keyExtractor","item","index","_getPageWidth","fitPolicy","state","numberOfPages","singlePage","contentContainerSize","width","scale","height","pageAspectRate","_getPageHeight","_renderSeparator","horizontal","spacing","backgroundColor","_onItemSingleTap","x","y","onPageSingleTap","_onItemDoubleTap","maxScale","_onScaleChanged","pageX","pageY","pinchInfo","newScale","minScale","newContentOffset","contentOffset","setState","onScaleChanged","_renderItem","pageView","id","fileNo","key","flexDirection","_onViewableItemsChanged","viewableInfo","i","viewableItems","length","_onPageChanged","page","onPageChanged","currentPage","_getRef","ref","_flatList","_getItemLayout","data","offset","_onScroll","e","nativeEvent","_onListContentSizeChange","contentWidth","contentHeight","scrollToXY","_renderList","styles","container","style","enablePaging","justifyContent","alignItems","centerContent","_onLayout","event","layout","pdfLoaded","pdfPageSize","_scaleTimer","_scrollTimer","_mounted","loadFile","path","password","then","pdfInfo","pageAspectRatio","onLoadComplete","catch","error","onError","clearTimeout","setTimeout","scrollToIndex","animated","prevProps","propTypes","string","number","bool","func","defaultProps","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2017-present, Wonday (@wonday.org)\n * All rights reserved.\n *\n * This source code is licensed under the MIT-style license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\nimport React, {Component} from 'react';\nimport {ScrollView, FlatList, View, StyleSheet, ViewPropTypes} from 'react-native';\n\nimport PropTypes from 'prop-types';\n\nimport PdfManager from './PdfManager';\nimport PdfPageView from './PdfPageView';\nimport DoubleTapView from './DoubleTapView';\nimport PinchZoomView from './PinchZoomView';\nimport PdfViewFlatList from './PdfViewFlatList';\n\nconst MIN_SCALE = 1;\nconst MAX_SCALE = 3;\n\nconst VIEWABILITYCONFIG = {minimumViewTime: 500, itemVisiblePercentThreshold: 10, waitForInteraction: false};\n\nexport default class PdfView extends Component {\n\n    static propTypes = {\n        ...ViewPropTypes,\n        path: PropTypes.string,\n        password: PropTypes.string,\n        scale: PropTypes.number,\n        minScale: PropTypes.number,\n        maxScale: PropTypes.number,\n        spacing: PropTypes.number,\n        fitPolicy: PropTypes.number,\n        horizontal: PropTypes.bool,\n        page: PropTypes.number,\n        currentPage: PropTypes.number,\n        singlePage: PropTypes.bool,\n        onPageSingleTap: PropTypes.func,\n        onScaleChanged: PropTypes.func,\n    };\n\n    static defaultProps = {\n        path: \"\",\n        password: \"\",\n        scale: 1,\n        minScale: MIN_SCALE,\n        maxScale: MAX_SCALE,\n        spacing: 10,\n        style: {},\n        fitPolicy: 2,\n        horizontal: false,\n        centerContent: false,\n        page: 1,\n        currentPage: -1,\n        enablePaging: false,\n        singlePage: false,\n        onPageSingleTap: (page, x, y) => {\n        },\n        onScaleChanged: (scale) => {\n        },\n    };\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            pdfLoaded: false,\n            fileNo: -1,\n            numberOfPages: 0,\n            page: -1,\n            currentPage: -1,\n            pageAspectRate: 0.5,\n            pdfPageSize: {width: 0, height: 0},\n            contentContainerSize: {width: 0, height: 0},\n            scale: this.props.scale,\n            contentOffset: {x: 0, y: 0},\n            newContentOffset: {x: 0, y: 0},\n        };\n\n        this._flatList = null;\n        this._scaleTimer = null;\n        this._scrollTimer = null;\n        this._mounted = false;\n\n    }\n\n    componentDidMount() {\n        this._mounted = true;\n        PdfManager.loadFile(this.props.path, this.props.password)\n            .then((pdfInfo) => {\n                if (this._mounted) {\n                    const fileNo = pdfInfo[0];\n                    const numberOfPages = pdfInfo[1];\n                    const width = pdfInfo[2];\n                    const height = pdfInfo[3];\n                    const pageAspectRatio = height === 0 ? 1 : width / height;\n\n                    this.setState({\n                        pdfLoaded: true,\n                        fileNo,\n                        numberOfPages,\n                        pageAspectRate: pageAspectRatio,\n                        pdfPageSize: {width, height},\n                        centerContent: numberOfPages > 1 ? false : true\n                    });\n                    if (this.props.onLoadComplete) {\n                        this.props.onLoadComplete(numberOfPages, this.props.path, {width, height});\n                    }\n                }\n\n            })\n            .catch((error) => {\n                this.props.onError(error);\n            });\n\n        clearTimeout(this._scrollTimer);\n        this._scrollTimer = setTimeout(() => {\n            if (this._flatList) {\n                this._flatList.scrollToIndex({animated: false, index: this.props.page < 1 ? 0 : this.props.page - 1});\n            }\n        }, 200);\n    }\n\n    componentDidUpdate(prevProps) {\n\n        if (this.props.scale !== this.state.scale) {\n            this._onScaleChanged({\n                scale: this.props.scale / this.state.scale,\n                pageX: this.state.contentContainerSize.width / 2,\n                pageY: this.state.contentContainerSize.height / 2\n            });\n        }\n\n        if (this.props.horizontal !== prevProps.horizontal || this.props.page !== prevProps.page) {\n            let page = (this.props.page) < 1 ? 1 : this.props.page;\n            page = page > this.state.numberOfPages ? this.state.numberOfPages : page;\n\n            if (this._flatList) {\n                clearTimeout(this._scrollTimer);\n                this._scrollTimer = setTimeout(() => {\n                    this._flatList.scrollToIndex({animated: false, index: page - 1});\n                }, 200);\n            }\n        }\n\n    }\n\n    componentWillUnmount() {\n        this._mounted = false;\n        clearTimeout(this._scaleTimer);\n        clearTimeout(this._scrollTimer);\n\n    }\n\n    _keyExtractor = (item, index) => \"pdf-page-\" + index;\n\n    _getPageWidth = () => {\n\n        let fitPolicy = this.props.fitPolicy;\n\n        // if only one page, show whole page in center\n        if (this.state.numberOfPages === 1 || this.props.singlePage) {\n            fitPolicy = 2;\n        }\n\n\n        switch (fitPolicy) {\n            case 0:  //fit width\n                return this.state.contentContainerSize.width * this.state.scale;\n            case 1:  //fit height\n                return this.state.contentContainerSize.height * this.state.pageAspectRate * this.state.scale;\n            case 2: //fit both\n            default: {\n                if (this.state.contentContainerSize.width/this.state.contentContainerSize.height<this.state.pageAspectRate) {\n                    return this.state.contentContainerSize.width * this.state.scale;\n                } else {\n                    return this.state.contentContainerSize.height * this.state.pageAspectRate * this.state.scale;\n                }\n            }\n        }\n\n    };\n\n    _getPageHeight = () => {\n\n        let fitPolicy = this.props.fitPolicy;\n\n        // if only one page, show whole page in center\n        if (this.state.numberOfPages === 1 || this.props.singlePage) {\n            fitPolicy = 2;\n        }\n\n        switch (fitPolicy) {\n            case 0: //fit width\n                return this.state.contentContainerSize.width * (1 / this.state.pageAspectRate) * this.state.scale;\n            case 1: //fit height\n                return this.state.contentContainerSize.height * this.state.scale;\n            case 2: //fit both\n            default: {\n                if (this.state.contentContainerSize.width/this.state.contentContainerSize.height<this.state.pageAspectRate) {\n                    return this.state.contentContainerSize.width * (1 / this.state.pageAspectRate) * this.state.scale;\n                } else {\n                    return this.state.contentContainerSize.height * this.state.scale;\n                }\n            }\n        }\n\n    };\n\n    _renderSeparator = () => (\n        <View style={this.props.horizontal ? {\n            width: this.props.spacing * this.state.scale,\n            backgroundColor: 'transparent'\n        } : {\n            height: this.props.spacing * this.state.scale,\n            backgroundColor: 'transparent'\n        }}/>\n    );\n\n    _onItemSingleTap = (index, x, y) => {\n\n        this.props.onPageSingleTap(index + 1, x, y);\n\n    };\n\n    _onItemDoubleTap = (index) => {\n\n        if (this.state.scale >= this.props.maxScale) {\n            this._onScaleChanged({\n                scale: 1 / this.state.scale,\n                pageX: this.state.contentContainerSize.width / 2,\n                pageY: this.state.contentContainerSize.height / 2\n            });\n        } else {\n            this._onScaleChanged({\n                scale: 1.2,\n                pageX: this.state.contentContainerSize.width / 2,\n                pageY: this.state.contentContainerSize.height / 2\n            });\n        }\n\n    };\n\n    _onScaleChanged = (pinchInfo) => {\n\n        let newScale = pinchInfo.scale * this.state.scale;\n        newScale = newScale > this.props.maxScale ? this.props.maxScale : newScale;\n        newScale = newScale < this.props.minScale ? this.props.minScale : newScale;\n        let newContentOffset = {\n            x: (this.state.contentOffset.x + pinchInfo.pageX) * (newScale / this.state.scale) - pinchInfo.pageX,\n            y: (this.state.contentOffset.y + pinchInfo.pageY) * (newScale / this.state.scale) - pinchInfo.pageY\n        }\n        this.setState({scale: newScale, newContentOffset: newContentOffset});\n        this.props.onScaleChanged(newScale);\n\n    };\n\n    _renderItem = ({item, index}) => {\n        const pageView = (\n            <PdfPageView\n                accessible={true}\n                key={item.id}\n                fileNo={this.state.fileNo}\n                page={item.key + 1}\n                width={this._getPageWidth()}\n                height={this._getPageHeight()}\n            />\n        )\n\n        if (this.props.singlePage) {\n            return (\n                <View style={{flexDirection: this.props.horizontal ? 'row' : 'column'}} >\n                    {pageView}\n                </View>\n            )\n        }\n\n        return (\n            <DoubleTapView style={{flexDirection: this.props.horizontal ? 'row' : 'column'}}\n                           onSingleTap={(x, y) => {\n                               this._onItemSingleTap(index, x, y);\n                           }}\n                           onDoubleTap={() => {\n                               this._onItemDoubleTap(index);\n                           }}\n            >\n                {pageView}\n                {(index !== this.state.numberOfPages - 1) && this._renderSeparator()}\n            </DoubleTapView>\n        );\n\n    };\n\n    _onViewableItemsChanged = (viewableInfo) => {\n\n        for (let i = 0; i < viewableInfo.viewableItems.length; i++) {\n            this._onPageChanged(viewableInfo.viewableItems[i].index + 1, this.state.numberOfPages);\n            if (viewableInfo.viewableItems.length + viewableInfo.viewableItems[0].index < this.state.numberOfPages) break;\n        }\n\n    };\n\n    _onPageChanged = (page, numberOfPages) => {\n        if (this.props.onPageChanged && this.state.currentPage !== page) {\n            this.props.onPageChanged(page, numberOfPages);\n            this.setState({currentPage: page});\n        }\n    };\n\n\n    _getRef = (ref) => this._flatList = ref;\n\n    _getItemLayout = (data, index) => ({\n        length: this.props.horizontal ? this._getPageWidth() : this._getPageHeight(),\n        offset: ((this.props.horizontal ? this._getPageWidth() : this._getPageHeight()) + this.props.spacing * this.state.scale) * index,\n        index\n    });\n\n    _onScroll = (e) => {\n        this.setState({contentOffset: e.nativeEvent.contentOffset, newContentOffset: e.nativeEvent.contentOffset});\n    };\n\n    _onListContentSizeChange = (contentWidth, contentHeight) => {\n        if (this.state.contentOffset.x != this.state.newContentOffset.x\n            || this.state.contentOffset.y != this.state.newContentOffset.y) {\n            this._flatList.scrollToXY(this.state.newContentOffset.x, this.state.newContentOffset.y);\n        }\n    };\n\n    _renderList = () => {\n        let data = [];\n\n        if (this.props.singlePage) {\n            data[0] = {key: this.props.currentPage >= 0 ? this.props.currentPage : 0}\n        } else {\n            for (let i = 0; i < this.state.numberOfPages; i++) {\n                data[i] = {key: i};\n            }\n        }\n\n        return (\n            <PdfViewFlatList\n                ref={this._getRef}\n                style={[styles.container, this.props.style]}\n                pagingEnabled={this.props.enablePaging}\n                contentContainerStyle={[{\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }, this.props.horizontal ? {height: this.state.contentContainerSize.height * this.state.scale} : {width: this.state.contentContainerSize.width * this.state.scale}]}\n                horizontal={this.props.horizontal}\n                data={data}\n                renderItem={this._renderItem}\n                keyExtractor={this._keyExtractor}\n                windowSize={11}\n                getItemLayout={this._getItemLayout}\n                maxToRenderPerBatch={1}\n                renderScrollComponent={(props) => <ScrollView\n                    {...props}\n                    centerContent={this.state.centerContent}\n                    pinchGestureEnabled={false}\n                />}\n                initialScrollIndex={this.props.page < 1 ? 0 : this.props.page - 1}\n                onViewableItemsChanged={this._onViewableItemsChanged}\n                viewabilityConfig={VIEWABILITYCONFIG}\n                onScroll={this._onScroll}\n                onContentSizeChange={this._onListContentSizeChange}\n                scrollEnabled={!this.props.singlePage}\n            />\n        );\n\n    };\n\n    _onLayout = (event) => {\n        this.setState({\n            contentContainerSize: {\n                width: event.nativeEvent.layout.width,\n                height: event.nativeEvent.layout.height\n            }\n        });\n    };\n\n\n    render() {\n        if (this.props.singlePage) {\n            return (\n                <View\n                    style={styles.container}\n                    onLayout={this._onLayout}\n                >\n                    {this.state.pdfLoaded && this._renderList()}\n                </View>\n            )\n        }\n\n        return (\n            <PinchZoomView\n                style={styles.container}\n                onLayout={this._onLayout}\n                onScaleChanged={this._onScaleChanged}\n            >\n                {this.state.pdfLoaded && this._renderList()}\n            </PinchZoomView>\n        );\n\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    }\n});"]},"metadata":{},"sourceType":"module"}