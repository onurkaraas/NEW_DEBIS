{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar PdfViewFlatList = function (_FlatList) {\n  _inherits(PdfViewFlatList, _FlatList);\n\n  var _super = _createSuper(PdfViewFlatList);\n\n  function PdfViewFlatList() {\n    var _this;\n\n    _classCallCheck(this, PdfViewFlatList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.scrollToXY = function (x, y) {\n      _this._listRef._scrollRef.scrollTo({\n        x: x,\n        y: y,\n        animated: false\n      });\n    };\n\n    return _this;\n  }\n\n  return PdfViewFlatList;\n}(FlatList);\n\nexport { PdfViewFlatList as default };","map":{"version":3,"sources":["C:/Users/onurk/Desktop/NEW_DEBIS/node_modules/react-native-pdf/PdfViewFlatList.js"],"names":["React","Component","PdfViewFlatList","scrollToXY","x","y","_listRef","_scrollRef","scrollTo","animated","FlatList"],"mappings":"AAQA;;;;;;;;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;IAKqBC,e;;;;;;;;;;;;;;;;UAYjBC,U,GAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACnB,YAAKC,QAAL,CAAcC,UAAd,CAAyBC,QAAzB,CAAkC;AAACJ,QAAAA,CAAC,EAAEA,CAAJ;AAAOC,QAAAA,CAAC,EAAEA,CAAV;AAAaI,QAAAA,QAAQ,EAAE;AAAvB,OAAlC;AACH,K;;;;;;EAdwCC,Q;;SAAxBR,e","sourcesContent":["/**\n * Copyright (c) 2017-present, Wonday (@wonday.org)\n * All rights reserved.\n *\n * This source code is licensed under the MIT-style license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\nimport React, {Component} from 'react';\nimport {\n    FlatList,\n} from 'react-native';\n\nexport default class PdfViewFlatList extends FlatList {\n    /**\n     * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n     *\n     * Example:\n     *\n     * `scrollTo({x: 0, y: 0, animated: true})`\n     *\n     * Note: The weird function signature is due to the fact that, for historical reasons,\n     * the function also accepts separate arguments as an alternative to the options object.\n     * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n     */\n    scrollToXY = (x, y) => {\n        this._listRef._scrollRef.scrollTo({x: x, y: y, animated: false});\n    }\n\n}"]},"metadata":{},"sourceType":"module"}