{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\onurk\\\\Desktop\\\\NEW_DEBIS\\\\node_modules\\\\react-native-pdf\\\\PdfPageView.js\";\nvar _excluded = [\"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\n\nvar PdfPageView = function (_PureComponent) {\n  _inherits(PdfPageView, _PureComponent);\n\n  var _super = _createSuper(PdfPageView);\n\n  function PdfPageView() {\n    var _this;\n\n    _classCallCheck(this, PdfPageView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._getStylePropsProps = function () {\n      var _this$props = _this.props,\n          width = _this$props.width,\n          height = _this$props.height;\n\n      if (width || height) {\n        return {\n          width: width,\n          height: height\n        };\n      }\n\n      return {};\n    };\n\n    return _this;\n  }\n\n  _createClass(PdfPageView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          restProps = _objectWithoutProperties(_this$props2, _excluded);\n\n      return React.createElement(PdfPageViewCustom, _extends({}, restProps, {\n        style: [style, this._getStylePropsProps()],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return PdfPageView;\n}(PureComponent);\n\nexport { PdfPageView as default };\nPdfPageView.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  fileNo: PropTypes.number,\n  page: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number\n});\nPdfPageView.defaultProps = {\n  style: {}\n};\nvar PdfPageViewCustom = requireNativeComponent('RCTPdfPageView', PdfPageView, {\n  nativeOnly: {}\n});","map":{"version":3,"sources":["C:/Users/onurk/Desktop/NEW_DEBIS/node_modules/react-native-pdf/PdfPageView.js"],"names":["React","PureComponent","PropTypes","ViewPropTypes","requireNativeComponent","PdfPageView","_getStylePropsProps","props","width","height","style","restProps","propTypes","fileNo","number","page","defaultProps","PdfPageViewCustom","nativeOnly"],"mappings":"AASA;;;;;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;SAEIC,a;SACAC,sB;;IAGiBC,W;;;;;;;;;;;;;;;;UACjBC,mB,GAAsB,YAAM;AACxB,wBAAwB,MAAKC,KAA7B;AAAA,UAAOC,KAAP,eAAOA,KAAP;AAAA,UAAcC,MAAd,eAAcA,MAAd;;AACA,UAAID,KAAK,IAAIC,MAAb,EAAqB;AACjB,eAAO;AAACD,UAAAA,KAAK,EAALA,KAAD;AAAQC,UAAAA,MAAM,EAANA;AAAR,SAAP;AACH;;AACD,aAAO,EAAP;AACH,K;;;;;;;WAED,kBAAS;AACL,yBAGI,KAAKF,KAHT;AAAA,UACIG,KADJ,gBACIA,KADJ;AAAA,UAEOC,SAFP;;AAIA,aACI,oBAAC,iBAAD,eACQA,SADR;AAEI,QAAA,KAAK,EAAE,CAACD,KAAD,EAAQ,KAAKJ,mBAAL,EAAR,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAOH;;;;EArBoCL,a;;SAApBI,W;AAwBrBA,WAAW,CAACO,SAAZ,mCACOT,aADP;AAEIU,EAAAA,MAAM,EAAEX,SAAS,CAACY,MAFtB;AAGIC,EAAAA,IAAI,EAAEb,SAAS,CAACY,MAHpB;AAIIN,EAAAA,KAAK,EAAEN,SAAS,CAACY,MAJrB;AAKIL,EAAAA,MAAM,EAAEP,SAAS,CAACY;AALtB;AAQAT,WAAW,CAACW,YAAZ,GAA2B;AACvBN,EAAAA,KAAK,EAAE;AADgB,CAA3B;AAIA,IAAIO,iBAAiB,GAAGb,sBAAsB,CAAC,gBAAD,EAAmBC,WAAnB,EAAgC;AAACa,EAAAA,UAAU,EAAE;AAAb,CAAhC,CAA9C","sourcesContent":["/**\n * Copyright (c) 2017-present, Wonday (@wonday.org)\n * All rights reserved.\n *\n * This source code is licensed under the MIT-style license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n'use strict';\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ViewPropTypes,\n    requireNativeComponent,\n} from 'react-native';\n\nexport default class PdfPageView extends PureComponent {\n    _getStylePropsProps = () => {\n        const {width, height} = this.props;\n        if (width || height) {\n            return {width, height};\n        }\n        return {};\n    };\n\n    render() {\n        const {\n            style,\n            ...restProps\n        } = this.props;\n        return (\n            <PdfPageViewCustom\n                {...restProps}\n                style={[style, this._getStylePropsProps()]}\n            />\n        );\n\n    }\n}\n\nPdfPageView.propTypes = {\n    ...ViewPropTypes,\n    fileNo: PropTypes.number,\n    page: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nPdfPageView.defaultProps = {\n    style: {}\n};\n\nlet PdfPageViewCustom = requireNativeComponent('RCTPdfPageView', PdfPageView, {nativeOnly: {}});\n"]},"metadata":{},"sourceType":"module"}